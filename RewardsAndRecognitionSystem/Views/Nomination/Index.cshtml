@using Microsoft.AspNetCore.Identity
@using RewardsAndRecognitionRepository.Enums
@model IEnumerable<RewardsAndRecognitionRepository.Models.Nomination>

@{
    ViewData["Title"] = "Nominations List";
    Layout = "~/Views/Shared/_Layout.cshtml";

    var reviewedIds = ViewBag.ReviewedNominationIds as List<Guid> ?? new List<Guid>();
    var nominationsList = Model.ToList();
    var isManager = User.IsInRole("Manager");
    var isDirector = User.IsInRole("Director");
    var isTeamLead = User.IsInRole("TeamLead");
}

<style>
    :root {
        --indigo-main: #3f51b5;
        --indigo-light: #5c6bc0;
        --indigo-dark: #303f9f;
        --danger: #c62828;
        --danger-hover: #b71c1c;
        --text-light: #fff;
    }

    .dontdisplay {
    }

    .btn {
        padding: 6px 12px;
        border-radius: 4px;
        font-size: 0.875rem;
        font-weight: 500;
        border: none;
        text-decoration: none;
        display: inline-flex;
        align-items: center;
        gap: 6px;
        cursor: pointer;
    }

    .btn-indigo {
        background: linear-gradient(to right, var(--indigo-main), var(--indigo-light));
        color: var(--text-light);
        border: none;
        padding: 8px 16px;
        border-radius: 6px;
        font-weight: 500;
        text-decoration: none;
        display: inline-flex;
        align-items: center;
        gap: 8px;
        transition: all 0.3s ease;
    }

        .btn-indigo:hover {
            filter: brightness(0.95);
            transform: translateY(-1px);
            color: var(--text-light);
        }


    .btn-danger {
        background: var(--danger);
        color: white;
    }

        .btn-danger:hover {
            background: var(--danger-hover);
        }

    .btn-disabled {
        background: #ccc;
        color: #666;
        cursor: not-allowed;
    }

    .table-custom {
        width: 100%;
        border-collapse: collapse;
        background: white;
        border-radius: 8px;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
        overflow: hidden;
    }

        .table-custom th, .table-custom td {
            padding: 14px 16px;
            text-align: left;
            border-bottom: 1px solid #ddd;
        }

        .table-custom th {
            background: linear-gradient(to right, var(--indigo-main), var(--indigo-light));
            color: white;
        }

    .filter-bar {
        display: flex;
        justify-content: space-between;
        gap: 15px;
        margin-bottom: 20px;
    }

        .filter-bar input, .filter-bar select {
            padding: 8px 12px;
            border: 1px solid #ccc;
            border-radius: 6px;
            min-width: 200px;
        }

    .popup-overlay {
        position: fixed;
        top: 0;
        left: 0;
        width: 100vw;
        height: 100vh;
        background: rgba(0, 0, 0, 0.6);
        display: none;
        justify-content: center;
        align-items: center;
        z-index: 9999;
    }

    .popup-card {
        background: #5c6bc0;
        padding: 10px;
        border-radius: 10px;
        width: 1000px;
        max-height: 90vh;
        overflow-y: auto;
        color: black;
        box-shadow: 0 8px 20px rgba(0, 0, 0, 0.2);
    }

    .popup-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .popup-close {
        background: none;
        border: none;
        font-size: 1.5rem;
        font-weight: bold;
        width: 32px;
        height: 32px;
        margin: 8px;
        padding-bottom: 8px;
        padding-right: 8px;
        color: #999;
        cursor: pointer;
        transition: all 0.3s ease;
        display: flex;
        align-items: center;
        justify-content: center;
    }

        .popup-close:hover {
            background-color: red;
            color: white;
            border-radius: 50%;
        }



    .no-click {
        pointer-events: none;
        opacity: 0.6;
        cursor: not-allowed;
    }



    .popup-fields {
        display: flex;
        flex-direction: column;
        gap: 12px;
        margin-bottom: 20px;
    }

    .popup-field {
        background: #f5f5f5;
        padding: 10px;
        border-radius: 6px;
    }

    .popup-textarea {
        background-color: #fff;
        border: 1px solid #ccc;
        padding: 8px;
        border-radius: 4px;
        color: #333;
    }

    .popup-review-card {
        background: white;
        border-radius: 12px;
        max-width: 1100px;
        width: 100%;
        color: #333;
        box-shadow: 0 10px 24px rgba(0, 0, 0, 0.25);
    }

    .text-indigo {
        color: #3f51b5;
    }

    .popup-label {
        font-weight: 600;
        color: #303f9f;
        margin-bottom: 5px;
        display: block;
    }

    .popup-block {
        background-color: #f3f5fa;
        border: 1px solid #ddd;
        padding: 12px 16px;
        border-radius: 6px;
        font-size: 15px;
        white-space: pre-wrap;
        word-wrap: break-word;
        color: #333;
    }

</style>

<h2><i class="bi bi-star-fill"></i> Nominations</h2>

@if (isTeamLead)
{
    <div class="text-end mb-3">
        <a asp-action="Create" class="btn btn-indigo">
            <i class="bi bi-plus-circle-fill"></i> Create Nomination
        </a>
    </div>

    <table class="table-custom">
        <thead>
            <tr>
                <th>#</th>
                <th>Nominee</th>
                <th>Team</th>
                <th>Category</th>
                <th>Status</th>
                <th>Created</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @for (int i = 0; i < nominationsList.Count; i++)
            {
                var n = nominationsList[i];
                <tr>
                    <td>@(i + 1)</td>
                    <td>@n.Nominee?.Name</td>
                    <td>@n.Nominee?.Team?.Name</td>
                    <td>@n.Category?.Name</td>
                    <td>@n.Status</td>
                    <td>@n.CreatedAt.ToShortDateString()</td>
                    <td>
                        <a asp-action="Details" asp-route-id="@n.Id" class="btn btn-indigo btn-sm">
                            <i class="bi bi-eye-fill"></i> Details
                        </a>


                        <a asp-action="Edit"
                           asp-route-id="@n.Id"
                           class="btn btn-indigo btn-sm @( (n.Status == NominationStatus.PendingManager) ? "" : "disabled no-click" )">
                            <i class="bi bi-pencil-fill"></i> Edit
                        </a>

                        <button class="btn btn-danger btn-sm @( (n.Status == NominationStatus.PendingManager) ? "" : "disabled no-click" )"
                                data-bs-toggle="modal"
                                data-bs-target="#deleteModal"
                                data-id="@n.Id">
                            <i class="bi bi-trash-fill"></i> Delete
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@if (isManager || isDirector)
{
    <div class="filter-bar">
        <input type="text" id="liveSearch" placeholder="🔍 Search by Nominee" />
        <select id="filterSelect">
            <option value="all">All</option>
            <option value="pending">Pending</option>
            <option value="reviewed">Reviewed</option>
            <option value="approved">Approved</option>
            <option value="rejected">Rejected</option>
        </select>
    </div>

    <table class="table-custom" id="nominationsTable">
        <thead>
            <tr>
                <th>S.No</th>
                <th>Nominee</th>
                <th>Team</th>
                <th>Category</th>
                <th>Nominated By</th>
                <th>Status</th>
                <th>Created</th>
                <th>Review</th>
            </tr>
        </thead>
        <tbody>
            @for (int i = 0; i < nominationsList.Count; i++)
            {
                var n = nominationsList[i];
                var isReviewed = reviewedIds.Contains(n.Id);
                var managerRemarks = "";
                var directorRemarks = "";
                var managerApprovalStatus = "";
                if (isDirector)
                {
                    managerRemarks = n.Approvals?.FirstOrDefault(a => a.ApproverId != ViewBag.currentUser.Id)?.Remarks ?? "No Remarks";
                    directorRemarks = n.Approvals?.FirstOrDefault(a => a.ApproverId == ViewBag.currentUser.Id)?.Remarks ?? "No Remarks";
                    managerApprovalStatus = n.Approvals?.FirstOrDefault(a => a.ApproverId != ViewBag.currentUser.Id)?.Action.ToString() ?? "No Action Taken";
                } else
                {
                    managerRemarks = n.Approvals?.FirstOrDefault()?.Remarks ?? "No Remarks";
                }

                

                <tr class="@(isReviewed ? "reviewed" : "pending")"
                    data-index="@i"
                    data-id="@n.Id"
                    data-name="@n.Nominee?.Name?.ToLower()"
                    data-team="@n.Nominee?.Team?.Name"
                    data-category="@n.Category?.Name"
                    data-nominatedby="@n.Nominator?.Name"
                    data-description="@n.Description"
                    data-achievements="@n.Achievements"
                    data-status="@n.Status"
                    data-created="@n.CreatedAt.ToShortDateString()"
                    data-reviewed="@isReviewed.ToString().ToLower()"
                    data-director="@isDirector.ToString().ToLower()"
                    data-approval_status="@managerApprovalStatus"
                    data-director_remarks ="@directorRemarks"
                    data-manager_remarks ="@managerRemarks">
                    <td>@(i + 1)</td>
                    <td>@n.Nominee?.Name</td>
                    <td>@n.Nominee?.Team?.Name</td>
                    <td>@n.Category?.Name</td>
                    <td>@n.Nominator?.Name</td>
                    <td>@n.Status</td>
                    <td>@n.CreatedAt.ToShortDateString()</td>
                    <td>
                        <button class="btn btn-indigo btn-sm open-popup" data-index="@i">
                            <i class="bi bi-eye-fill"></i> @(isReviewed ? "View" : "Review")
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <!-- Popup for Review/View -->
    <div class="popup-overlay" id="popupOverlay">
        <div class="popup-card">
            <div class="popup-header justify-content-end">
                <button class="popup-close" onclick="closePopup()"><b>×</b></button>
            </div>
            <div id="popupContent"></div>
        </div>
    </div>

    <!-- Hidden Review Form -->
    <form id="reviewForm" method="post" asp-action="Review" asp-controller="Nomination">
        @Html.AntiForgeryToken()
        <input type="hidden" name="id" id="reviewId" />
        <input type="hidden" name="action" id="reviewAction" />
        <input type="hidden" name="remarks" id="reviewRemarks" />
    </form>
}


<!-- Delete Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content bg-white text-dark">
            <div class="modal-header">
                <h5 class="modal-title"><i class="bi bi-exclamation-triangle text-danger"></i> Confirm Deletion</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">Are you sure you want to delete this nomination?</div>
            <div class="modal-footer">
                <form id="deleteForm" asp-action="DeleteConfirmed" method="post">
                    @Html.AntiForgeryToken()
                    <input type="hidden" name="id" id="deleteNominationId" />
                    <button type="submit" class="btn btn-danger"><i class="bi bi-trash-fill"></i> Delete</button>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="~/js/Nomination.js">

    </script>
}