@model IEnumerable<RewardsAndRecognitionRepository.Models.Category>

@{
    ViewData["Title"] = "Categories";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    :root {
        --indigo-main: #3f51b5;
        --indigo-light: #5c6bc0;
        --indigo-dark: #303f9f;
        --danger: #c62828;
        --danger-hover: #b71c1c;
        --gray: #6c757d;
        --text-light: #fff;
    }

    .btn {
        padding: 8px 14px;
        border-radius: 5px;
        font-size: 0.875rem;
        font-weight: 500;
        text-decoration: none;
        display: inline-flex;
        align-items: center;
        gap: 6px;
        border: none;
        transition: transform 0.2s ease;
        white-space: nowrap;
    }

    .btn-indigo {
        background: var(--indigo-main);
        color:white;
    }

        .btn-indigo:hover {
            background: var(--indigo-dark);
            color: white;
        }

    .btn-secondary {
        background: var(--gray);
        
    }

        .btn-secondary:hover {
            background: #5a6268;
            
        }

    .btn-danger {
        background: var(--danger);
        color: var(--text-light);
    }

        .btn-danger:hover {
            background: var(--danger-hover);
            
        }

    .table-custom {
        width: 100%;
        border-collapse: collapse;
        background: white;
        border-radius: 8px;
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.08);
        overflow: hidden;
    }

        .table-custom th,
        .table-custom td {
            padding: 14px 16px;
            text-align: left;
            vertical-align: middle;
        }

        .table-custom th {
            background: linear-gradient(to right, var(--indigo-main), var(--indigo-light));
            color: white;
            font-weight: 600;
        }

        .table-custom tr:nth-child(even) {
            background-color: #f5f5f5;
        }

        .table-custom tr:hover {
            background-color: #eef1f7;
        }

    .actions-cell {
        white-space: nowrap;
        display: flex;
        gap: 8px;
        flex-wrap: wrap;
    }

    .desc-cell {
        max-width: 280px;
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
    }
</style>

<h2 class="mb-4"><i class="bi bi-tags-fill me-2"></i>Categories</h2>

<div class="mb-3 text-end">
    <a asp-action="Create" class="btn btn-indigo">
        <i class="bi bi-plus-circle-fill"></i> New Category
    </a>
</div>

<table class="table-custom">
    <thead>
        <tr>
            <th><i class="bi bi-tag-fill"></i> Name</th>
            <th class="desc-cell"><i class="bi bi-card-text"></i> Description</th>
            <th><i class="bi bi-calendar-event"></i> Created Date</th>
            <th><i class="bi bi-tools"></i> Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var category in Model)
        {
            <tr>
                <td>@category.Name</td>
                <td class="desc-cell">@category.Description</td>
                <td>@category.CreatedAt.ToShortDateString()</td>
                <td class="actions-cell">
                    <a asp-action="Edit" asp-route-id="@category.Id" class="btn btn-indigo btn-sm">
                        <i class="bi bi-pencil-fill"></i> Edit
                    </a>
                    <a asp-action="Details" asp-route-id="@category.Id" class="btn btn-secondary btn-sm">
                        <i class="bi bi-eye-fill"></i> Details
                    </a>
                    <button type="button" class="btn btn-danger" onclick="confirmDelete('@category.Id')">
                        <i class="bi bi-trash-fill"></i> Delete
                    </button> 
                    @* <button type="button"
                            class="btn btn-danger btn-sm"
                            onclick="return confirmDelete('@category.Id')">
                        <i class="bi bi-trash-fill"></i> Delete
                    </button> *@
                </td>
            </tr>
        }
    </tbody>
</table>

<script type="text/javascript">
    const categoriesInNominations = @Html.Raw(ViewBag.CategoryIdsJson);
</script>


@* <script>
    function confirmDelete(categoryId) {
    //       if (categoriesInNominations.includes(categoryId)) {
    //   alert("This category is in use in a nomination and cannot be deleted.");
    //   Stop here—no further action
    //   return;
    // }
      Swal.fire({
        title: 'Are you sure?',
        text: "This action cannot be undone.",
        icon: 'warning',
        showCancelButton: true,
        confirmButtonText: 'Yes, delete it!',
        cancelButtonText: 'No, cancel!',
        reverseButtons: true
      }).then((result) => {
        if (result.isConfirmed) {
          // Create a form dynamically
          const form = document.createElement('form');
          form.method = 'POST';
          form.action = '/Category/Delete/' + categoryId;

          // Add anti-forgery token
          const token = document.querySelector('input[name="__RequestVerificationToken"]');
          if (token) {
            const hiddenToken = document.createElement('input');
            hiddenToken.type = 'hidden';
            hiddenToken.name = '__RequestVerificationToken';
            hiddenToken.value = token.value;
            form.appendChild(hiddenToken);
          }

          document.body.appendChild(form);
          form.submit(); // automatically execute your POST action
        }
      });
    }
</script>

 *@

<script>
        function confirmDelete(categoryId) {
      Swal.fire({
        title: 'Are you sure?',
        text: "This action cannot be undone.",
        icon: 'warning',
        showCancelButton: true,
        confirmButtonText: 'Yes, delete it!',
        cancelButtonText: 'No, cancel!',
        reverseButtons: true
      }).then((result) => {
        if (result.isConfirmed) {
          // Check AFTER confirmation
          if (categoriesInNominations.includes(String(categoryId))) {
               alert("This category is in use in a nomination and cannot be deleted.");
               return;
          }

          // Create a form dynamically for POST deletion
          const form = document.createElement('form');
          form.method = 'POST';
          form.action = '/Category/Delete/' + categoryId;

          // Add anti-forgery token
          const token = document.querySelector('input[name="__RequestVerificationToken"]');
          if (token) {
            const hiddenToken = document.createElement('input');
            hiddenToken.type = 'hidden';
            hiddenToken.name = '__RequestVerificationToken';
            hiddenToken.value = token.value;
            form.appendChild(hiddenToken);
          }

          document.body.appendChild(form);
          form.submit(); // Execute POST
        }
      });
    }

</script>